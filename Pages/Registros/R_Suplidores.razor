@page "/R_Suplidores"
@page "/R_Suplidores/{SuplidorId:int}"

@inject NotificationService notificacion
@inject SuplidoresBLL suplidoresBll

<EditForm Model="suplidor" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card-header">
        <h3>Registro de Suplidores</h3>
    </div>
    <div class="card-body">
        <form>
            @*SuplidorId*@
            <div class="form-row align-items-center">
                <div class="col">
                    <div class="form-group">
                        <label>SuplidorId</label>
                        <div class="input-group">
                            <InputNumber @bind-Value="suplidor.SuplidorId" class="form-control col-4" />
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary input-group-text"
                                    @onclick="Buscar">Buscar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @*NombreComp*@
            <div class="form-group">
                <label>Nombre de Compa√±ia</label>
                <InputText @bind-Value="suplidor.NombreComp" class="form-control" />
                <ValidationMessage For="@(() => suplidor.NombreComp)" />
            </div>
            @*NombreVendedor*@
            <div class="form-group">
                <label>Nombre del Vendedor</label>
                <InputText @bind-Value="suplidor.NombreVendedor" class="form-control" />
                <ValidationMessage For="@(() => suplidor.NombreVendedor)" />
            </div>
            @*RNC*@
            <div class="form-group">
                <label>RNC</label>
                <InputText @bind-Value="suplidor.RNC" class="form-control" />
                <ValidationMessage For="@(() => suplidor.RNC)" />
            </div>
            @*Direccion*@
            <div class="form-group">
                <label>Direccion</label>
                <InputText @bind-Value="suplidor.Direccion" class="form-control" />
                <ValidationMessage For="@(() => suplidor.Direccion)" />
            </div>
            @*Telefono*@
            <div class="form-group">
                <label>Telefono</label>
                <InputText @bind-Value="suplidor.Telefono" class="form-control" />
                <ValidationMessage For="@(() => suplidor.Telefono)" />
            </div>
            @*Celular*@
            <div class="form-group">
                <label>Celular</label>
                <InputText @bind-Value="suplidor.Celular" class="form-control" />
                <ValidationMessage For="@(() => suplidor.Celular)" />
            </div>
        </form>
    </div>
    <div class="card-footer">
        <div class="form-group text-center" display: inline-block>
            <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo"><i class="oi oi-file" />Nuevo</button>
            <button type="submit" class="btn btn-lg btn-success"><i class="oi oi-document" />Guardar</button>
            <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar"><i class="oi oi-trash" />Eliminar</button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int SuplidorId { get; set; }
    public Suplidores suplidor { get; set; } = new Suplidores();

    public List<Suplidores> lista { get; set; } = new List<Suplidores>();

    protected override void OnInitialized()
    {
        if (SuplidorId > 0)
        {
            this.suplidor.SuplidorId = SuplidorId;
            this.Buscar();
        }
    }
    private void Buscar()
    {
        if (suplidor.SuplidorId > 0)
        {
            var encontrado = suplidoresBll.Buscar(suplidor.SuplidorId);

            if (encontrado != null)
                this.suplidor = encontrado;
        }
    }
    public void Guardar()
    {

        bool guardo;

        guardo = suplidoresBll.Guardar(suplidor);
        if (guardo)
        {
            //notificacion.ShowNotification("Guardado correctamente.");
            Nuevo();
        }
        else
        {
            //notificacion.ShowNotification("No fue guardado correctamente", NotificationSeverity.Error);
        }

    }
    public void Nuevo()
    {
        suplidor = new Suplidores();
    }

    public void Eliminar()
    {
        bool elimino;

        elimino = suplidoresBll.Eliminar(suplidor);

        if (elimino)
        {
            //notificacion.ShowNotification("Eliminado correctamente.", NotificationSeverity.Error);
            Nuevo();
        }
        else
        {
            //notificacion.ShowNotification("No se pudo eliminar correctamente.", NotificationSeverity.Warning);
        }
    }
}